import streamlit as st

st.title("BOT de Apoio Aviator üé≤‚úàÔ∏è")

# Hist√≥rico de resultados
if "history" not in st.session_state:
    st.session_state.history = []

novo = st.text_input("Digite o √∫ltimo resultado (ex: 6.54):")

if st.button("Adicionar"):
    try:
        val = float(novo)
        st.session_state.history.append(val)
    except:
        st.warning("Digite um n√∫mero v√°lido")

# Mostrar hist√≥rico
st.subheader("Hist√≥rico")
st.write(st.session_state.history[-20:])  # √∫ltimos 20

# Simula√ß√£o simples (estat√≠sticas emp√≠ricas)
if st.session_state.history:
    data = st.session_state.history[-50:]  # √∫ltimos 50
    n = len(data)
    p_low = sum(x < 1.2 for x in data)/n
    p_mid = sum(1.2 <= x < 2 for x in data)/n
    p_med = sum(2 <= x < 5 for x in data)/n
    p_high = sum(x >= 5 for x in data)/n

    st.subheader("Probabilidades (√∫ltimos 50)")
    st.write({
        "<1.2x": round(p_low*100, 1),
        "1.2‚Äì2.0x": round(p_mid*100, 1),
        "2.0‚Äì5.0x": round(p_med*100, 1),
        "5.0x+": round(p_high*100, 1),
    })

    # Sugest√£o simples
    if p_low > 0.35:
        sugestao = "Alta chance de crash baixo ‚Äî melhor evitar a pr√≥xima rodada."
    elif p_mid > 0.35:
        sugestao = "Boa chance at√© 2x ‚Äî cashout r√°pido em 1.5x recomendado."
    elif p_high > 0.15:
        sugestao = "Alguma chance de rodada longa ‚Äî arriscar at√© 2x ou 3x."
    else:
        sugestao = "Situa√ß√£o neutra ‚Äî entrar apenas com valor pequeno."

    st.subheader("Sugest√£o do BOT")
    st.success(sugestao)
